DROP TABLE IF EXISTS CLINIC;
DROP TABLE IF EXISTS CORPORATION;
DROP TABLE IF EXISTS ANATOMICAL_LOC;
DROP TABLE IF EXISTS SURG_SKILL; 
DROP TABLE IF EXISTS MEDICATION;
DROP TABLE IF EXISTS ALLERGY;
DROP TABLE IF EXISTS ILLNESS; 
DROP TABLE IF EXISTS WING;
DROP TABLE IF EXISTS NURSING_UNIT; 
DROP TABLE IF EXISTS STAFF;
DROP TABLE IF EXISTS PATIENT; 
DROP TABLE IF EXISTS SURG_CONTRACT; 
DROP TABLE IF EXISTS PATIENT_SUGAR; 
DROP TABLE IF EXISTS BED;
DROP TABLE IF EXISTS OP_THEATRE;
DROP TABLE IF EXISTS APPOINTMENT;
DROP TABLE IF EXISTS PATIENT_ILLNESS; 
DROP TABLE IF EXISTS NURSE_SURG_SKILL;
DROP TABLE IF EXISTS SURG_TYPE_SKILL;
DROP TABLE IF EXISTS NURSE_SURG_TYPE;
DROP TABLE IF EXISTS MED_INTERACT; 
DROP TABLE IF EXISTS OWNER;
DROP TABLE IF EXISTS PATIENT_ALLERGY;
DROP TABLE IF EXISTS PATIENT_CHOLESTEROL;
DROP TABLE IF EXISTS PATIENT_PRESCRIPTION;
DROP TABLE IF EXISTS SURG_TYPE; 
DROP TABLE IF EXISTS SURGERY; 
DROP TABLE IF EXISTS SURGERY_STAFF;
DROP TABLE IF EXISTS SHIFT; 
DROP TABLE IF EXISTS STAY; 

CREATE TABLE IF NOT EXISTS CLINIC (
    Name    VARCHAR(50),
    Addr    VARCHAR(100),
    City    VARCHAR(40),
    StateProv   CHAR(40),
    ZIP VARCHAR(20),
    Country CHAR(40),
    Phone   VARCHAR(10),
    PRIMARY KEY(Name)
);
CREATE TABLE IF NOT EXISTS CORPORATION (
    CorpName    VARCHAR(50),
    HqAddr  VARCHAR(100),
    HqCity  VARCHAR(40),
    HqStateProv CHAR(40),
    HqZIP   VARCHAR(20),
    HqCountry   CHAR(40),
    PRIMARY KEY(CorpName)
);
CREATE TABLE IF NOT EXISTS ANATOMICAL_LOC (
    Code    INTEGER,
    Description VARCHAR(50),
    PRIMARY KEY(Code AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS SURG_SKILL (
    Code    INTEGER,
    Description VARCHAR(50),
    PRIMARY KEY(Code AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS MEDICATION (
    Code    VARCHAR(15),
    Name    VARCHAR(50) NOT NULL,
    UnitCost    DECIMAL(8, 2) NOT NULL DEFAULT 0,
    QtyOnHand   DECIMAL(8, 2) NOT NULL DEFAULT 0,
    QtyOnOrder  DECIMAL(8, 2) NOT NULL DEFAULT 0,
    YTDUsage    DECIMAL(8, 2) NOT NULL DEFAULT 0,
    PRIMARY KEY(Code)
);
CREATE TABLE IF NOT EXISTS ALLERGY (
    Code    VARCHAR(10),
    Description VARCHAR(255),
    PRIMARY KEY(Code)
);
CREATE TABLE IF NOT EXISTS ILLNESS (
    Code    VARCHAR(10),
    Description VARCHAR(255),
    PRIMARY KEY(Code)
);
CREATE TABLE IF NOT EXISTS WING (
    Code    VARCHAR(5),
    PRIMARY KEY(Code)
);
CREATE TABLE IF NOT EXISTS NURSING_UNIT (
    Code    INTEGER,
    PRIMARY KEY(Code AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS STAFF (
    EmpNo   INTEGER,
    Fname   VARCHAR(50) NOT NULL,
    Minit   CHAR(1),
    Lname   VARCHAR(50) NOT NULL,
    Ssn CHAR(9) UNIQUE,
    Gender  CHAR(1) CHECK(Gender = 'M' OR Gender = 'F'),
    EmpType CHAR(4) NOT NULL CHECK(EmpType = 'PHYS' OR EmpType = 'NURS' OR EmpType = 'SURG' OR EmpType = 'SUPP'),
    Title   VARCHAR(50) NOT NULL,
    Salary  INTEGER,
    Specialty   VARCHAR(50) CHECK(Specialty IN ('Cardiology', 'Dermatology', 'Gastroenterology', 'Orthopedics', 'Neurology', 'Ophthalmology', 'Otolaryngology', 'Pediatrics', 'Obstetrics and Gynecology', 'Urology', 'Endocrinology', 'Rheumatology', 'Pulmonology', 'Hematology', 'Infectious Disease', 'Emergency Medicine', 'Plastic Surgery', 'Radiology', 'Anesthesiology', 'Pathology')),
    NurseGrade  INTEGER,
    YrsNursingExp   INT,
    Addr    VARCHAR(100),
    City    VARCHAR(40),
    StateProv   CHAR(40),
    ZIP VARCHAR(20),
    Country CHAR(40),
    Phone   VARCHAR(10),
    PRIMARY KEY(EmpNo AUTOINCREMENT),
    CHECK((EmpType = 'NURS' AND YrsNursingExp IS NOT NULL AND YrsNursingExp >= 0) OR (EmpType != 'NURS' AND YrsNursingExp IS NULL)),
    CHECK((EmpType != 'SURG' AND Salary IS NOT NULL AND Salary >= 25000 AND Salary <= 300000) OR (EmpType = 'SURG' AND Salary IS NULL)),
    CHECK(((EmpType = 'PHYS' OR EmpType = 'SURG') AND Specialty IS NOT NULL) OR ((EmpType = 'NURS' OR EmpType = 'SUPP') AND Specialty IS NULL)),
    CHECK((EmpType = 'NURS' AND NurseGrade IS NOT NULL AND NurseGrade >= 1) OR (EmpType != 'NURS' AND NurseGrade IS NULL))
);
CREATE TABLE IF NOT EXISTS PATIENT (
    PatientNo   INTEGER,
    Fname   VARCHAR(50) NOT NULL,
    Minit   CHAR(1),
    Lname   VARCHAR(50) NOT NULL,
    Ssn CHAR(9) UNIQUE,
    Gender  CHAR(1) NOT NULL CHECK(Gender IN ('M', 'F')),
    Dob DATETIME NOT NULL,
    BloodType   VARCHAR(2) CHECK(BloodType IN ('A', 'B', 'AB', 'O')),
    RhFactor    CHAR(1) CHECK(RhFactor IN ('+', '-')),
    Pcp INTEGER NOT NULL DEFAULT 1,
    Addr    VARCHAR(100),
    City    VARCHAR(20),
    StateProv   CHAR(2),
    ZIP VARCHAR(10),
    Country CHAR(2),
    Phone   VARCHAR(15),
    PRIMARY KEY(PatientNo AUTOINCREMENT),
    FOREIGN KEY(Pcp) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE SET DEFAULT
);
CREATE TABLE IF NOT EXISTS SURG_CONTRACT (
    EmpNo   INTEGER,
    ContractType    VARCHAR(20) NOT NULL CHECK(ContractType IN ('Independent', 'Partnership', 'Call Coverage', 'Research', 'Consulting')),
    LengthYrs   INTEGER NOT NULL,
    PRIMARY KEY(EmpNo),
    FOREIGN KEY(EmpNo) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS PATIENT_SUGAR (
    ReadingNo   INTEGER,
    PatientNo   INTEGER NOT NULL,
    ReadTime    DATETIME NOT NULL,
    mgdL    INTEGER NOT NULL,
    PRIMARY KEY(ReadingNo AUTOINCREMENT),
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS BED (
    Code    INTEGER,
    Clinic  VARCHAR(50) NOT NULL,
    Wing    VARCHAR(5) NOT NULL,
    NurseUnit   INT NOT NULL,
    RoomNo  INT NOT NULL,
    Bed CHAR NOT NULL CHECK(Bed IN ('A', 'B')),
    PRIMARY KEY(Code AUTOINCREMENT),
    FOREIGN KEY(Clinic) REFERENCES CLINIC(Name) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Wing) REFERENCES WING(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(NurseUnit) REFERENCES NURSING_UNIT(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS OP_THEATRE (
    Code    INTEGER,
    Clinic  VARCHAR(50) NOT NULL,
    Theatre CHAR NOT NULL,
    PRIMARY KEY(Code AUTOINCREMENT),
    FOREIGN KEY(Clinic) REFERENCES CLINIC(Name) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS APPOINTMENT (
    AppointmentNo   INTEGER,
    PatientNo   INTEGER NOT NULL,
    Physician   INTEGER NOT NULL,
    Clinic  VARCHAR(50) NOT NULL,
    Time    DATETIME NOT NULL,
    Type    VARCHAR(15) NOT NULL CHECK(Type IN ('Routine', 'Consultation', 'Follow-up', 'Diagnostic', 'Preventive', 'Emergency')),
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Physician) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    PRIMARY KEY(AppointmentNo AUTOINCREMENT),
    FOREIGN KEY(Clinic) REFERENCES CLINIC(Name) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS PATIENT_ILLNESS (
    DiagnosisNo INTEGER,
    PatientNo   INTEGER NOT NULL,
    Illness VARCHAR(10) NOT NULL,
    AppointmentNo   INT NOT NULL,
    PRIMARY KEY(DiagnosisNo AUTOINCREMENT),
    FOREIGN KEY(Illness) REFERENCES ILLNESS(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(AppointmentNo) REFERENCES APPOINTMENT(AppointmentNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(PatientNo) REFERENCES Patient(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS NURSE_SURG_SKILL (
    EmpNo   INTEGER NOT NULL,
    Skill   INTEGER NOT NULL,
    FOREIGN KEY(EmpNo) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Skill) REFERENCES SURG_SKILL(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS SURG_TYPE_SKILL (
    Type    INTEGER NOT NULL,
    Skill   INTEGER NOT NULL,
    FOREIGN KEY(Type) REFERENCES SURG_TYPE(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Skill) REFERENCES SURG_SKILL(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS NURSE_SURG_TYPE (
    EmpNo   INTEGER,
    Type    INTEGER NOT NULL,
    PRIMARY KEY(EmpNo),
    FOREIGN KEY(EmpNo) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Type) REFERENCES SURG_TYPE(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS MED_INTERACT (
    InteractionNo   INTEGER,
    MedA    VARCHAR(15) NOT NULL,
    MedB    VARCHAR(15) NOT NULL,
    Severity    CHAR NOT NULL CHECK(Severity IN ('N', 'L', 'M', 'S')),
    PRIMARY KEY(InteractionNo AUTOINCREMENT),
    FOREIGN KEY(MedB) REFERENCES MEDICATION(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(MedA) REFERENCES MEDICATION(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS OWNER (
    OwnerID INTEGER,
    Clinic  VARCHAR(50) NOT NULL,
    CorpName    VARCHAR(50),
    EmpNo   INTEGER,
    PctOwnership    INT NOT NULL,
    PRIMARY KEY(OwnerID AUTOINCREMENT),
    FOREIGN KEY(EmpNo) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(CorpName) REFERENCES CORPORATION(CorpName) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Clinic) REFERENCES CLINIC(Name) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS PATIENT_ALLERGY (
    DiagnosisNo INTEGER,
    PatientNo   INTEGER NOT NULL,
    Allergy VARCHAR(10) NOT NULL,
    AppointmentNo   INT NOT NULL,
    PRIMARY KEY(DiagnosisNo AUTOINCREMENT),
    FOREIGN KEY(AppointmentNo) REFERENCES APPOINTMENT(AppointmentNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Allergy) REFERENCES ALLERGY(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(PatientNo) REFERENCES Patient(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS PATIENT_CHOLESTEROL (
    ReadingNo   INTEGER,
    PatientNo   INTEGER NOT NULL,
    ReadTime    DATETIME NOT NULL,
    Hdl INTEGER NOT NULL,
    Ldl INTEGER NOT NULL,
    Triglycerides   INTEGER NOT NULL,
    CalculatedRatio DECIMAL(5, 4),
    CalculatedRiskCode  CHAR,
    HighRiskFlag    INT DEFAULT 0 CHECK(HighRiskFlag IN (0, 1)),
    PRIMARY KEY(ReadingNo AUTOINCREMENT),
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS PATIENT_PRESCRIPTION (
    PrescriptionNo  INTEGER,
    PatientNo   INTEGER NOT NULL,
    Medication  VARCHAR(15) NOT NULL,
    Dosage  VARCHAR(20) NOT NULL,
    Freq    VARCHAR(20) NOT NULL,
    PrescribedBy    INT NOT NULL,
    PRIMARY KEY(PrescriptionNo AUTOINCREMENT),
    FOREIGN KEY(PrescribedBy) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Medication) REFERENCES MEDICATION(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS SURG_TYPE (
    Code    INTEGER,
    Name    VARCHAR(50),
    Category    CHAR CHECK(Category IN ('O', 'H')),
    AnatomicalLoc   INTEGER NOT NULL,
    SpecialNeeds    VARCHAR(100),
    PRIMARY KEY(Code AUTOINCREMENT),
    FOREIGN KEY(AnatomicalLoc) REFERENCES ANATOMICAL_LOC(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS SURGERY (
    SurgeryNo   INTEGER,
    PatientNo   INTEGER NOT NULL,
    Surgeon INTEGER NOT NULL,
    SurgeryTime DATETIME NOT NULL,
    OpTheatre   INTEGER NOT NULL,
    SurgeryType INTEGER NOT NULL,
    PRIMARY KEY(SurgeryNo AUTOINCREMENT),
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Surgeon) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY(OpTheatre) REFERENCES OP_THEATRE(Code) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(SurgeryType) REFERENCES SURG_TYPE(Code) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS SURGERY_STAFF (
    SurgeryNo   INTEGER NOT NULL,
    EmpNo   INTEGER NOT NULL,
    FOREIGN KEY(EmpNo) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(SurgeryNo) REFERENCES SURGERY(SurgeryNo) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS SHIFT (
    ShiftNo INTEGER,
    EmpNo   INTEGER NOT NULL,
    StartDate   DATE NOT NULL,
    Shift   INTEGER NOT NULL CHECK(Shift IN (1, 2, 3)),
    PRIMARY KEY(ShiftNo AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS STAY (
    StayNo  INTEGER,
    PatientNo   INTEGER NOT NULL,
    Bed INTEGER NOT NULL,
    AdmissionDate   DATE NOT NULL,
    DiagnosisNo INTEGER NOT NULL,
    Nurse   INTEGER,
    PRIMARY KEY(StayNo AUTOINCREMENT),
    FOREIGN KEY(PatientNo) REFERENCES PATIENT(PatientNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(DiagnosisNo) REFERENCES PATIENT_ILLNESS(DiagnosisNo) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(Nurse) REFERENCES STAFF(EmpNo) ON UPDATE CASCADE ON DELETE SET NULL,
    FOREIGN KEY(Bed) REFERENCES BED(Code) ON UPDATE CASCADE ON DELETE CASCADE
);