/* Beds */

    DROP TABLE BED;

    CREATE TABLE BED (
        Code INTEGER PRIMARY KEY AUTOINCREMENT,
        Clinic VARCHAR(50) NOT NULL,
        Wing VARCHAR(5) NOT NULL,
        NurseUnit INT NOT NULL,
        RoomNo INT NOT NULL,
        Bed CHAR NOT NULL CHECK (Bed IN ('A', 'B')),
        FOREIGN KEY (Clinic) REFERENCES CLINIC(Name)
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        FOREIGN KEY (Wing) REFERENCES WING(Code)
            ON UPDATE CASCADE
            ON DELETE CASCADE,
        FOREIGN KEY (NurseUnit) REFERENCES NURSING_UNIT(Code)
            ON UPDATE CASCADE
            ON DELETE CASCADE
    );

    INSERT INTO BED (Clinic, Wing, NurseUnit, RoomNo, Bed) VALUES
        ('Newark Medical Clinic', 'Blue', 1, 1, 'A'),
        ('Newark Medical Clinic', 'Blue', 1, 1, 'B'),
        ('Newark Medical Clinic', 'Blue', 1, 2, 'A'),
        ('Newark Medical Clinic', 'Blue', 1, 2, 'B');

/* Trigger to make sure that no Bed record is being created for the same clinic, wing, nursing unit, room no, and bed */

    CREATE TRIGGER CHECK_BED_DUP_INSERT
    BEFORE INSERT ON BED
    FOR EACH ROW
    WHEN EXISTS (
        SELECT 1 FROM BED WHERE Clinic = NEW.Clinic AND Wing = NEW.Wing AND NurseUnit = NEW.NurseUnit AND RoomNo = NEW.RoomNo AND Bed = NEW.Bed
    )
    BEGIN
        SELECT RAISE (ABORT, 'The selected combination of clinic, wing, nursing unit, room, and bed already exists.');
    END;

/* Trigger to make sure that no Bed record is being updated for the same clinic, wing, nursing unit, room no, and bed */

    CREATE TRIGGER CHECK_BED_DUP_UPDATE
    BEFORE UPDATE ON BED
    FOR EACH ROW
    WHEN EXISTS (
        SELECT 1 FROM BED WHERE Clinic = NEW.Clinic AND Wing = NEW.Wing AND NurseUnit = NEW.NurseUnit AND RoomNo = NEW.RoomNo AND Bed = NEW.Bed
    )
    BEGIN
        SELECT RAISE (ABORT, 'The selected combination of clinic, wing, nursing unit, room, and bed already exists.');
    END;